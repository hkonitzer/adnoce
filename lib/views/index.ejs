<!doctype html>
<html>
  <head>
    <title>ADNOCE</title>
    <meta name="viewport" content="width=device-width">
    <script src="<%=cdnurl%>/jquery-1.9.1.min.js"></script>    
    <script src="/socket.io/socket.io.js"></script>    
    <style type="text/css">
      .loglinecontent {
        padding: 0.2em;  
        float: left;
      }
      .loglinecontent.sid {
        width: 4.2em;
      }
      .loglinecontent.counter {
        text-align: center;
        width: 1em;
      }
      .logline.datastore {
        width: 2em;
      }
      .logline {
        clear: both;
      }
    </style>
  </head>
  <body>
    <p>LOG, Server status: <span id="serverstatus"></span></p>
    <div id="log">
    </div>
    <script>
    var trackingDataIO = io.connect();
    trackingDataIO.on('connect', function () {      
      $('#serverstatus').text('connected');      
    });
    trackingDataIO.on('disconnect', function () {      
      $('#serverstatus').text('disconnected');
    });
  
    var normalizeSessionIdRegEx = /[^\w]/g;
    var normalizeSessionId = function(sessionId) {
      return sessionId.replace(normalizeSessionIdRegEx,'').substring(0,6);      
    }
    var normalizeURLRegEx = new RegExp(/^(http|ftp|https):\/\/(.*)\/(.*)/);
    var normalizeURL = function(url) {      
      var erg = normalizeURLRegEx.exec(url);      
      return { protocol : erg[1], host: erg[2], path: '/'+erg[3] };
    }
    trackingDataIO.on('trackingdata', function (data) {
      
      if ($('.logline').length > 20) $('.logline:first').remove();
      var sid = data.persistentSessionId || data.sessionId;

      var sid = normalizeSessionId(sid);
      var loglinediv = $('<div>', { 'class' : 'logline '+sid});
      
      loglinediv.append('<div class="loglinecontent timestamp">'+data.timestamp+'</div>');
      var ua = data.userAgent || 'n/a';
      loglinediv.append('<div class="loglinecontent sid" title="'+ua+'">'+sid+'</div>');
      
      loglinediv.append('<div class="loglinecontent counter"></div>');
      if (data.data && data.data.length > 0) {
        for (var d in data.data) {
          loglinediv.append('<div class="loglinecontent datastore '+data.data[d].key+'">'+data.data[d].key+':'+data.data[d].value+'</div>');      
        }
      }
      var urlObj = normalizeURL(data.url); 
      loglinediv.append('<div class="loglinecontent url" title="'+urlObj.host+'">'+urlObj.path+'</div>'); 
      
      if (data.persistentSessionId) {
        var oldC = parseInt($('.logline.'+sid+':last .counter').text(), 10);
        if (isNaN(oldC)) oldC = 0;      
        loglinediv.find('.counter').text(++oldC);      

        var oldsid = normalizeSessionId(data.sessionId);
        var oldElem = $('.'+oldsid);
        if (oldElem.length > 0) {
          oldElem.find('div.sid').text(sid);
          oldElem.removeClass(oldsid).addClass(sid);
          oldElem.find('.counter').text(oldC);
          loglinediv.find('.counter').text(++oldC);
        }              
      }
      $('#log').append(loglinediv);
    });
  </script>
  </body>
</html>